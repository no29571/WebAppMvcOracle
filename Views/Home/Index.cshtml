@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<h2>6. 検索</h2>
<div>
    <a href="https://github.com/no29571/WebAppMvcOracle/tree/ex-search">GitHub：ex-search</a>
</div>
<ol>
    <li>コントローラークラス（StudentsController.cs）に検索関連のメソッドを追加</li>
    <li>「Index.cshtml」に検索条件入力部を追加する</li>
    <li>部分ビュー（partial）の使用例</li>
    <li>トグル（bootstrap collapse）の使用例</li>
</ol>

<h2>5. モデルの検証</h2>
<div>
    <a href="https://github.com/no29571/WebAppMvcOracle/tree/ex-validation">GitHub：ex-validation</a>
</div>
<ol>
    <li>モデルクラス（Department.cs）のフィールドに組み込みの検証属性を設定</li>
</ol>
<ol>
    <li>コントローラークラス（DepartmentsController.cs）にリモート検証用のアクションメソッドを追加</li>
    <li>モデルクラス（Department.cs）のフィールドにリモート検証属性を設定</li>
</ol>
<ol>
    <li>コントローラークラス（LessonStudentsController.cs）にリモート検証用のアクションメソッドを追加</li>
    <li>モデルクラス（LessonStudent.cs）のフィールドに追加フィールドのあるリモート検証属性を設定</li>
    <li>検証結果出力用のspanがなければ追加</li>
</ol>
<ol>
    <li>カスタム検証属性クラス（Validation/MaxByteLengthAttribute.cs）を作成</li>
    <li>※ DBは文字数制限なのでバイト数チェックは不要（OracleのVACHAR2の場合は必要）</li>
    <li>モデルクラス（Student.cs）のフィールドにカスタム検証属性を設定</li>
</ol>
<ol>
    <li>モデルクラス（Lesson.cs）にIValidatableObjectを実装する</li>
</ol>

<h2>4. 複合主キー</h2>
<div>
    <a href="https://github.com/no29571/WebAppMvcOracle/tree/ex-key">GitHub：ex-key</a>
</div>
<ol>
    <li>複合主キーを含むモデルクラス（LessonStudent.cs）を作成</li>
    <li>ApplicationDbContextクラスに複合主キーの定義を追加</li>
    <li>CRUDのスキャフォールディング</li>
    <li>スキャフォールディングで作成されたコントローラークラスの主キーを修正</li>
    <li>スキャフォールディングで作成されたIndex.cshtmlのActionLinkを修正</li>
</ol>

<h2>3. リレーション</h2>
<div>
    <a href="https://github.com/no29571/WebAppMvcOracle/tree/ex-relation">GitHub：ex-relation</a>
</div>
<ol>
    <li>参照先のモデルクラス（Department.cs）を作成</li>
    <li>CRUDのスキャフォールディング</li>
    <li>外部キーを含むモデルクラス（Student.cs）を作成</li>
    <li>参照先のモデルクラスにも上記モデルの参照を追加</li>
    <li>ApplicationDbContextクラスにリレーションの定義を追加</li>
    <li>CRUDのスキャフォールディング</li>
    <li>プルダウンリスト関連の調整</li>
</ol>

<h2>2. CRUDのスキャフォールディング</h2>
<div>
    <a href="https://github.com/no29571/WebAppMvcOracle/tree/ex-crud">GitHub：ex-crud</a>
</div>
<ol>
    <li>Modulesフォルダで「追加（クラス - インターフェイス）」</li>
    <li>更新日時を共通項目として定義（IHasTimestamps.cs）</li>
    <li>ApplicationDbContextクラスに更新日時設定の処理を追加</li>
</ol>
<ol>
    <li>Modulesフォルダで「追加（クラス）」</li>
    <li>モデルクラスにフィールドを定義</li>
    <li>モデルクラスにIHasTimestampsを実装</li>
    <li>Controllersフォルダで「追加（新規スキャフォールディングアイテム）」</li>
    <li>「Entity Frameworkを使用したビューがあるMVCコントローラー」</li>
    <li>モデルクラスとDbContextクラスを選択</li>
    <li>追加</li>
    <li>※ 新規DbContextクラスの場合は、ここでデータベースプロバイダーを指定するとDB接続が設定される</li>
</ol>
<ol>
    <li>Create.cshtmlとEdit.cshtmlでの更新日時の入力は不要のため調整</li>
    <li>コントローラークラスにアクセス制限 [Authorize] を設定</li>
    <li>Views/Shared/_Layout.cshtmlに「nav-item」を追加（ヘッダーメニューにリンクを追加）</li>
</ol>
<ol>
    <li>ApplicationDbContextクラスに追加されたモデルをマイグレーションでDBに反映</li>
    <li>※ 他にフィールドの追加・削除あればあわせてマイグレーション</li>
    <li>パッケージマネージャーコンソール</li>
    <li>Add-Migration XXX</li>
    <li>Update-Database</li>
</ol>

<h2>1. Oracleで個別のアカウントを使用する</h2>
<div>
    <a href="https://github.com/no29571/WebAppMvcOracle/tree/ex-oracle">GitHub：ex-oracle</a>
</div>
<ol>
    <li>Visual Studio Community</li>
    <li>ファイル - 新規作成 - プロジェクト - ASP.NET Core Webアプリ（MVC）</li>
    <li>認証の種類「個別のアカウント」</li>
    <li>作成</li>
</ol>
<ol>
    <li>ツール - NuGetパッケージマネージャ - ソリューションのNuGetパッケージの管理</li>
    <li>【追加でインストールする】Oracle.EntityFrameworkCore</li>
    <li>【必要に応じてバージョン調整（更新プログラムのインストール）】</li>
    <li>Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore</li>
    <li>Microsoft.AspNetCore.Identity.EntityFrameworkCore</li>
    <li>Microsoft.AspNetCore.Identity.UI</li>
    <li>Microsoft.EntityFrameworkCore.SqlServer</li>
    <li>Microsoft.EntityFrameworkCore.Tools</li>
    <li>【後で自動追加される】Microsoft.VisualStudio.Web.CodeGeneration.Design</li>
</ol>
<ol>
    <li>Programs.cs「UseSqlServer」→「UseOracle」</li>
    <li>appsettings.json「ConnectionStrings」変更</li>
</ol>
<pre>
--sqlplus system/password@localhost:1521/XEPDB1

CREATE USER ex_vs
IDENTIFIED BY "example"
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp;

GRANT dba TO ex_vs;
</pre>
<ol>
    <li>Data/Migrations配下のcsファイルを削除（SQLServer用のため）</li>
    <li>表示 - その他のウィンドウ - パッケージマネージャーコンソール</li>
    <li>（省略）Enable-Migrations</li>
    <li>Add-Migration XXX</li>
    <li>Update-Database</li>
</ol>
<ol>
    <li>_EFMigrationsHistory</li>
    <li>AspNetRoleClaims</li>
    <li>AspNetRoles</li>
    <li>AspNetUserClaims</li>
    <li>AspNetUserLogins</li>
    <li>AspNetUserRoles</li>
    <li>AspNetUsers</li>
    <li>AspNetUserTokens</li>
    <li>※ SQLではテーブル名を「"」で囲む</li>
</ol>
<ol>
    <li>Views/Shared/_Layout.cshtml「html lang="en"」→「html lang="ja"」</li>
    <li>「IIS Express」を選択して実行</li>
    <li>test@example.com</li>
    <li>AUVY.cRwef:JMH2</li>
</ol>
